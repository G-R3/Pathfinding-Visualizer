* {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
    font-family: "Roboto", sans-serif;
    --clr: #202020;
    --clr-2: #404040;
    --clr-3: #f4f4f4;
    --transition-duration: 200ms;
}
html {
    height: 100%;
}
body {
    font-size: 16px;
    padding: 0 2rem;
    min-height: 100%;
    background-color: var(--clr);
    color: var(--clr-3);
}
.navbar {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1rem 0;
    margin: 0 auto;
    max-width: 1500px;
}
.nav-title {
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1px;
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: 15px;
}
.navbar-container {
    display: flex;
    justify-content: center;
    gap: 15px;
}
.error-msg {
    font-weight: bold;
    font-size: 18px;
    display: flex;
    align-items: center;
    gap: 10px;
    color: var(--clr-3);
    background-color: rgb(255, 95, 95);
    width: max-content;
    padding: 0 0.5rem;
    border-radius: 5px;
    animation: bounceIn 500ms ease;
}
.checkbox-container {
    display: flex;
}
input.chk-btn {
    display: none;
}
input.chk-btn + label {
    font-weight: bold;
    letter-spacing: 1px;
    border: 1px solid transparent;
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 15px;
    background: var(--clr-2);
    padding: 0.8rem 1rem;
    cursor: pointer;
    transition: all ease var(--transition-duration);
}
input.chk-btn:not(:checked) + label:hover {
    box-shadow: 0 0 10px 2px rgba(0, 0, 0, 0.5);
}
input.chk-btn + label:active,
input.chk-btn:checked + label {
    border: 1px solid var(--clr-2);
    background: var(--clr);
}
input.chk-btn:disabled + label {
    opacity: 0.7;
    transform: scale(0.95);
}
.nav-button {
    font-weight: bold;
    letter-spacing: 1px;
    display: flex;
    align-items: center;
    gap: 15px;
    transition: transform ease var(--transition-duration);
}
.nav-button:active {
    transform: scale(0.98);
}
.nav-button-icon {
    color: rgb(163, 255, 163);
}
.dropdown {
    position: relative;
    z-index: 2;
    width: 250px;
}
.dropdown-toggle {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 15px;
    font-size: 18px;
    width: 100%;
}

.dropdown-options {
    list-style: none;
    width: 100%;
    position: absolute;
    background-color: var(--clr-2);
    top: 100%;
    margin-top: 0.5rem;
    padding: 0.5rem 0;
    box-shadow: 0 0 10px 2px rgba(0, 0, 0, 0.5);
    animation: show 300ms;
}
@keyframes show {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}
.dropdown-options li {
    font-size: 1rem;
    font-weight: 400;
    letter-spacing: 0.00938em;
    padding: 0.5rem 1rem;
    transition: background-color ease var(--transition-duration);
}
.dropdown-options li:hover {
    background-color: #5f5f5f;
    cursor: pointer;
}
.btn {
    font-size: 18px;
    padding: 0.8rem 1rem;
    border: none;
    background-color: var(--clr-2);
    color: #f4f4f4;
    cursor: pointer;
    transition: all ease var(--transition-duration);
}
.btn:hover {
    box-shadow: 0 0 10px 2px rgba(0, 0, 0, 0.5);
}
.btn:disabled {
    opacity: 0.7;
    transform: scale(0.95);
}
.btn:active {
    transform: scale(0.98);
}
.cleargrid-button,
.clearpath-button {
    display: flex;
    align-items: center;
    gap: 15px;
}
main {
    margin-top: 2.5rem;
    display: flex;
    justify-content: center;
    gap: 3.5rem;
    flex-wrap: wrap;
}
.Grid-container:last-child {
    margin-bottom: 30px;
}
.Grid {
    display: flex;
    position: relative;
}
.Grid-Controller {
    display: flex;
    align-items: center;
    justify-content: space-between;
    flex-direction: row;
    gap: 15px;
    margin-bottom: 2rem;
}
@media (max-width: 568px) {
    .Grid-Controller {
        flex-direction: column;
    }
}
.Grid-Controller-buttons {
    display: flex;
    gap: 20px;
}
.node {
    width: 20px;
    height: 20px;
    outline: 1px solid var(--clr);
    /* display: inline-block; */
    background-color: #eeeeee;
}
@media (max-width: 780px) {
    .node {
        width: 15px;
        height: 15px;
    }
}
.wall {
    background-color: var(--clr-2);
    animation: scale 200ms ease;
}

.start-node {
    background-color: rgb(163, 255, 163);
}
.end-node {
    background-color: rgb(255, 95, 95);
}
.node-visited {
    background-color: rgb(116, 116, 255);
}
.node-shortest-path {
    background-color: rgb(163, 255, 163);
    animation: scale 200ms ease;
}
.Modal {
    display: flex;
    justify-items: center;
    align-items: center;
    overflow-x: hidden;
    overflow-y: hidden;
    position: absolute;
    z-index: 50;
    top: 0px;
    right: 0px;
    bottom: 0px;
    left: 0px;
    outline: none;
    animation: bounceIn 500ms ease;
}
@keyframes bounceIn {
    0% {
        transform: scale(0);
    }
    25% {
        transform: scale(1.01);
    }
    50% {
        transform: scale(0.95);
    }
    100% {
        transform: scale(1);
    }
}
.Modal-Container {
    position: relative;
    width: 20rem;
    margin: 1.5rem auto 1.5rem auto;
    max-width: 20rem;
    padding: 0 0.5rem;
}
.Modal-Content {
    padding: 2rem;
    box-shadow: 0 0 10px 2px rgba(0, 0, 0, 0.5);
    position: relative;
    display: flex;
    flex-direction: column;
    gap: 1.25rem;
    width: 100%;
    background-color: var(--clr);
    outline: none;
}
.Modal-Header {
    display: flex;
    align-items: center;
    justify-items: center;
}
.Modal-Header h3 {
    font-size: 30px;
    font-weight: 600;
}
.Modal-Body {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
}
.Modal-Footer {
    display: flex;
    justify-content: flex-end;
    align-items: center;
    border-top: 1px solid var(--clr-2);
    border-radius: 0.375rem;
    padding-top: 0.5rem;
}
.Modal-Footer-Button {
    color: red;
    border: none;
    background: transparent;
    font-weight: bold;
    text-transform: uppercase;
    padding: 0.75rem 1.5rem;
    margin: 0.25rem;
    transition: all 200 ease;
    cursor: pointer;
}
@keyframes scale {
    0% {
        transform: scale(1);
    }
    50% {
        transform: scale(1.5);
    }
    100% {
        transform: scale(1);
    }
}
